#!/usr/bin/env bash

set -oue pipefail

cd "$HOME" || exit 1

# Distro detection with normalization
get_distro() {
        if [[ -f /etc/os-release ]]; then
                source /etc/os-release
                echo "${ID:-unknown}" | tr '[:upper:]' '[:lower:]'
        else
                echo "unknown"
        fi
}

BOOTSTRAP_BASE="${BASH_SOURCE[0]}.d"
DISTRO=$(get_distro)

echo "Detected distro: $DISTRO"

if [[ ! -d "$BOOTSTRAP_BASE" ]]; then
        echo "Error: bootstrap directory '$BOOTSTRAP_BASE' not found" >&2
        exit 1
fi

# Execute scripts from distro-specific directory only
dir="$BOOTSTRAP_BASE/$DISTRO"
if [[ -d "$dir" ]]; then
        echo "Executing scripts from: $dir"
        find -L "$dir" -type f | sort | while IFS= read -r bootstrap; do
                if [[ -x "$bootstrap" && ! "$bootstrap" =~ "##" && ! "$bootstrap" =~ "~$" ]]; then
                        echo "Running: $(basename "$bootstrap")"
                        if ! "$bootstrap"; then
                                echo "Error: bootstrap '$bootstrap' failed" >&2
                                exit 1
                        fi
                fi
        done
else
        echo "Warning: No bootstrap directory found for distro: $DISTRO" >&2
fi

read -rp "Do you want to reboot now? (y/n): " confirm

if [[ "$confirm" == "y" || "$confirm" == "Y" ]]; then
        echo "Rebooting now..."
        systemctl reboot
fi
